dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
fviz_cluster(hclust_avg_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
fviz_cluster(cut_avg_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(knitr)
library(ggplot2)
library(Kmedians)
library(NbClust)
library(haven)
library(factoextra)
library(cluster)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15, print.summary = TRUE) + ggtitle("Optimal Number of Clusters for Pitchers Using Kmeans")
NbClust(data=scale_pitcher, diss = NULL, distance = "euclidean", min.nc=2, max.nc=15, method = "kmeans", index = "beale")
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using Kmeans")
fviz_nbclust(scale_all, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15)
#gap statistics
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15, print.summary = TRUE) + ggtitle("Optimal Number of Clusters for Pitchers Using Kmeans")
NbClust(data=scale_pitcher, diss = NULL, distance = "euclidean", min.nc=2, max.nc=15, method = "kmeans", index = "beale")
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using Kmeans")
fviz_nbclust(scale_all, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15)
#gap statistics
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15, print.summary = TRUE) + ggtitle("Optimal Number of Clusters for Pitchers Using Kmeans")
NbClust(data=scale_pitcher, diss = NULL, distance = "euclidean", min.nc=2, max.nc=15, method = "kmeans", index = "beale")
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using Kmeans")
fviz_nbclust(scale_all, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15)
#gap statistics
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
#elbow
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "elbow", diss = NULL, k.max=15, print.summary = TRUE)
#gap statistics
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
#elbow
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "elbow", diss = NULL, k.max=15, print.summary = TRUE)
#gap statistics
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
#elbow
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
#gap statistics kmeans
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
#elbow kmeans
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
#gap pam
fviz_nbclust(scale_pitcher, FUNcluster = pam ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = pam ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
#elbow pam
fviz_nbclust(scale_pitcher, FUNcluster = pam ,  method = "elbow", diss = NULL, k.max=15, print.summary = TRUE)
#elbow kmeans
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
#elbow pam
fviz_nbclust(scale_pitcher, FUNcluster = pam ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = pam ,  method = "wss", diss = NULL, k.max=15, print.summary = TRUE)
#gap statistics kmeans
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
#gap pam
fviz_nbclust(scale_pitcher, FUNcluster = pam ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
fviz_nbclust(scale_batter, FUNcluster = pam ,  method = "gap", diss = NULL, k.max=15, print.summary = TRUE)
?fviz_nbclust
?dist
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15, print.summary = TRUE) + ggtitle("Optimal Number of Clusters for Pitchers Using Kmeans")
NbClust(data=scale_pitcher, diss = NULL, distance = "euclidean", min.nc=2, max.nc=15, method = "kmeans", index = "beale")
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using Kmeans")
fviz_nbclust(scale_all, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15)
fviz_silhouette(respam)
fviz_silhouette(respam1)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
fviz_silhouette(resK_pitcher)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
plot(silhouette(resK_pitcher$cluster))
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
plot(silhouette(resK_pitcher$cluster, dist_pitcher))
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
plot(silhouette(resK_pitcher$cluster, dist_pitcher))
plot(silhouette(resk_batter$cluster, D = dist(scale_batter, method = "euclidean")))
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
plot(silhouette(resK_pitcher$cluster, dist_pitcher))
plot(silhouette(resK_batter$cluster, D = dist(scale_batter, method = "euclidean")))
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_batter <- dist(scale_batter, method = "euclidean")
plot(silhouette(resK_pitcher$cluster, dist_pitcher))
plot(silhouette(resK_batter$cluster, dist_batter))
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_batter <- dist(scale_batter, method = "euclidean")
plot(silhouette(resK_pitcher$cluster, dist_pitcher), border = NA)
plot(silhouette(resK_batter$cluster, dist_batter), border = NA)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_batter <- dist(scale_batter, method = "euclidean")
plot(silhouette(resK_pitcher$cluster, dist_pitcher), border = NA, col = 1:8)
plot(silhouette(resK_batter$cluster, dist_batter), border = NA)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_batter <- dist(scale_batter, method = "euclidean")
plot(silhouette(resK_pitcher$cluster, dist_pitcher), col = 1:8,  border = NA)
plot(silhouette(resK_batter$cluster, dist_batter), border = NA)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_batter <- dist(scale_batter, method = "euclidean")
plot(silhouette(resK_pitcher$cluster, dist_pitcher), col = 1:4,  border = NA)
plot(silhouette(resK_batter$cluster, dist_batter), border = NA)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_batter <- dist(scale_batter, method = "euclidean")
plot(silhouette(resK_pitcher$cluster, dist_pitcher), col = 1:4,  border = NA)
plot(silhouette(resK_batter$cluster, dist_batter), col = 1:2,  border = NA)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
hclust_avg_batter <- hclust(dist_batter, method = "ward.D")
plot(hclust_avg_batter)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
dist_batter <- dist(scale_batter, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
hclust_avg_batter <- hclust(dist_batter, method = "ward.D")
plot(hclust_avg_batter)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
dist_batter <- dist(scale_batter, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "average")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
hclust_avg_batter <- hclust(dist_batter, method = "average")
plot(hclust_avg_batter)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
dist_batter <- dist(scale_batter, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
hclust_avg_batter <- hclust(dist_batter, method = "ward.D")
plot(hclust_avg_batter)
install.packages("dendextend")
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
dist_batter <- dist(scale_batter, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
hclust_avg_batter <- hclust(dist_batter, method = "ward.D")
plot(hclust_avg_batter)
library(dendextend)
avg_dend_obj <- as.dendrogram(hclust_avg_pitcher)
avg_col_dend <- color_branches(avg_dend_obj, h = 3)
plot(avg_col_dend)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
dist_batter <- dist(scale_batter, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
hclust_avg_batter <- hclust(dist_batter, method = "ward.D")
plot(hclust_avg_batter)
library(dendextend)
avg_dend_obj <- as.dendrogram(hclust_avg_pitcher)
avg_col_dend <- color_branches(avg_dend_obj, h = 2)
plot(avg_col_dend)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(pitcherK) + geom_point(aes(y=salary, x=xwoba, color = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterK
ggplot(pitcherK) + geom_point(aes(y=salary, x=xwoba, color = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(pitcherK) + geom_point(aes(y=salary, x=xwoba, color = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
respam_elbow <- pam(scale_batter, 5, metric = "euclidean", stand = FALSE)
fviz_cluster(respam_elbow, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
respam_elbow_batter <- pam(scale_batter, 5, metric = "euclidean", stand = FALSE)
fviz_cluster(respam_elbow, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
respam_elbow_batter <- pam(scale_batter, 5, metric = "euclidean", stand = FALSE)
fviz_cluster(respam_elbow_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
fviz_silhouette(respam_elbow_batter)
nb <- as.matrix(batterClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
nb1 <- as.matrix(pitcherClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
fviz_nbclust(scale_batter, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using PAM")
fviz_nbclust(scale_pitcher, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Pitchers Using PAM")
fviz_nbclust(allclust, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
fviz_nbclust(scale_all, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
nb <- as.matrix(batterClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
nb1 <- as.matrix(pitcherClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
fviz_nbclust(scale_batter, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using PAM")
fviz_nbclust(scale_pitcher, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Pitchers Using PAM")
fviz_nbclust(scale_all, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
res <- as.matrix(batterClust1) %>% Kmedians(nclust = 3, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = TRUE)
res1 <- (pitcherClust1) %>% Kmedians(nclust = 14, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = FALSE)
res1fviz = (res1$bestresult$cluster)
respam <- pam(scale_pitcher, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using PAM") + xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
respam1 <- pam(scale_batter, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam1, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using PAM")+ xlab("Dimension 1(39.2%)") + ylab("Dimension 2 (20.6%)")
respam2 <- pam(scale_all, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam2, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
#dist_pitcher <- dist(scale_pitcher, method = "euclidean")
#dist_batter <- dist(scale_batter, method = "euclidean")
#hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
#plot(hclust_avg_pitcher)
#cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
#hclust_avg_batter <- hclust(dist_batter, method = "ward.D")
#plot(hclust_avg_batter)
#library(dendextend)
#avg_dend_obj <- as.dendrogram(hclust_avg_pitcher)
#avg_col_dend <- color_branches(avg_dend_obj, h = 2)
#plot(avg_col_dend)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(data = batterK) + geom_histogram(aes(x=salary, col = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(data = batterK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(data = batterK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterPam <- batter %>% mutate(cluster = respam$clustering)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterPam <- batter %>% mutate(cluster = respam$clusinfo)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
respam$clustering
ggplot(data = batterK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterK <- batter %>% mutate(cluster = respam$clustering)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterK <- batter %>% mutate(cluster = respam1$clustering)
ggplot(data = batterK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterPam <- batter %>% mutate(cluster = respam1$clustering)
pitcherPam <- pitcher %>% mutate(cluster = respam$clustering)
allPam <- allplayers %>% mutate(cluster = respam2$clustering)
ggplot(data = batterK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = batterPam) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherPam) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterPam <- batter %>% mutate(cluster = respam1$clustering)
pitcherPam <- pitcher %>% mutate(cluster = respam$clustering)
allPam <- allplayers %>% mutate(cluster = respam2$clustering)
ggplot(data = batterK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherK) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = allK) + geom_histogram(aes(x = salary, fill = as.factor(cluster)))
ggplot(data = batterPam) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = pitcherPam) + geom_histogram(aes(x=salary, fill = as.factor(cluster)))
ggplot(data = allPam) + geom_histogram(aes(x = salary, fill = as.factor(cluster)))
