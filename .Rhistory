pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single, Batting Avg, XLSO, XBA, Home Run, Hit, On Base + SLG, OBP, SLG%, Exit Velocity Avg, XOBP, Strikout, Launch Angle Avg, Walk, AB, Triple, Player_Age"))
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2)
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","AB", "Triple", "Player_Age"))
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2)
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","AB", "Triple", "Player Age"))
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2)
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2)
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2)
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG".  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age"))
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age"))
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2)
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age"))
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", :"Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk"))
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age"))
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", "Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk"))
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2")
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", "Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2")
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
res <- as.matrix(batterClust1) %>% Kmedians(nclust = 3, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = TRUE)
res1 <- (pitcherClust1) %>% Kmedians(nclust = 14, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = FALSE)
res1fviz = (res1$bestresult$cluster)
respam <- pam(pitcherClust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam, pitcherClust,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using PAM")
respam1 <- pam(batterClust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam1, batterClust,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using PAM")
respam2 <- pam(allclust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam2, allclust1,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
nb <- as.matrix(batterClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
nb1 <- as.matrix(pitcherClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
fviz_nbclust(batterClust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of clusters for Batters Using PAM")
fviz_nbclust(pitcherClust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Pitchers Using PAM")
fviz_nbclust(allclust, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
fviz_nbclust(allclust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15, print.summary = TRUE) + ggtitle("Optimal Number of Clusters for Pitchers Using Kmeans")
NbClust(data=scale_pitcher, diss = NULL, distance = "euclidean", min.nc=2, max.nc=15, method = "kmeans", index = "beale")
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using Kmeans")
fviz_nbclust(scale_all, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15)
nb <- as.matrix(batterClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
nb1 <- as.matrix(pitcherClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
fviz_nbclust(batterClust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using PAM")
fviz_nbclust(pitcherClust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Pitchers Using PAM")
fviz_nbclust(allclust, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
fviz_nbclust(allclust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1") + ylab("Dimension 2")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1") + ylab("Dimension 2")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2)") + ylab("Dimension 2 (20.6)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2)") + ylab("Dimension 2 (20.6)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
resK_pitcher <- kmeans(scale_pitcher, centers = 4, nstart = 20)
fviz_cluster(resK_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using Kmeans")+ xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
resK_batter <- kmeans(scale_batter, centers = 2, nstart = 20)
fviz_cluster(resK_batter, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using Kmeans")+ xlab("Dimension 1 (39.2%)") + ylab("Dimension 2 (20.6%)")
resK_all <- kmeans(scale_all, centers = 2, nstart = 20)
fviz_cluster(resK_all, scale_all,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
res <- as.matrix(batterClust1) %>% Kmedians(nclust = 3, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = TRUE)
res1 <- (pitcherClust1) %>% Kmedians(nclust = 14, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = FALSE)
res1fviz = (res1$bestresult$cluster)
respam <- pam(pitcherClust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam, pitcherClust,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using PAM") + xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
respam1 <- pam(batterClust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam1, batterClust,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using PAM")+ xlab("Dimension 1(39.2%)") + ylab("Dimension 2 (20.6%)")
respam2 <- pam(allclust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam2, allclust1,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Batters)")
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", "Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Batters)")
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Batters)")
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", "Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Pitchers)")
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(knitr)
library(ggplot2)
library(Kmedians)
library(NbClust)
library(haven)
library(factoextra)
library(cluster)
dist_pitcher <- dist(scale_pitcher, method = Euclidean)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "average")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "complete")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "single")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "weighted")
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "complete")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "centroid")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "complete")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D2")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D2")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, k=2)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, k=2)
cut_avg_pitcher
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
cut_avg_pitcher
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
plot(cut_avg_pitcher)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- all %>% mutate(cluster = resK_all$cluster)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(pitcherK) + geom_point(aes(y=salary, x=xwoba, color = cluster))
batterK <- batter %>% mutate(cluster = resK_batter$cluster)
pitcherK <- pitcher %>% mutate(cluster = resK_pitcher$cluster)
allK <- allplayers %>% mutate(cluster = resK_all$cluster)
ggplot(pitcherK) + geom_point(aes(y=salary, x=xwoba, color = as.factor(cluster)))
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
fviz_nbclust(scale_pitcher, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15, print.summary = TRUE) + ggtitle("Optimal Number of Clusters for Pitchers Using Kmeans")
NbClust(data=scale_pitcher, diss = NULL, distance = "euclidean", min.nc=2, max.nc=15, method = "kmeans", index = "beale")
fviz_nbclust(scale_batter, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using Kmeans")
fviz_nbclust(scale_all, FUNcluster = kmeans ,  method = "silhouette", diss = NULL, k.max=15)
res <- as.matrix(batterClust1) %>% Kmedians(nclust = 3, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = TRUE)
res1 <- (pitcherClust1) %>% Kmedians(nclust = 14, ninit = 0, niter = 20,
method = "Offline", init = TRUE, par = FALSE)
res1fviz = (res1$bestresult$cluster)
respam <- pam(scale_pitcher, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Pitcher Cluster Using PAM") + xlab("Dimension 1 (37.8%)") + ylab("Dimension 2 (21%)")
respam1 <- pam(scale_batter, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam1, scale_batter,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()) + ggtitle("Batter Cluster Using PAM")+ xlab("Dimension 1(39.2%)") + ylab("Dimension 2 (20.6%)")
respam2 <- pam(allclust1, 2, metric = "euclidean", stand = FALSE)
fviz_cluster(respam2, allclust1,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
nb <- as.matrix(batterClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
nb1 <- as.matrix(pitcherClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
fviz_nbclust(scale_batter, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using PAM")
fviz_nbclust(scale_pitcher, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Pitchers Using PAM")
fviz_nbclust(allclust, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
fviz_nbclust(allclust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
scale_pitcher <- scale(pitcherClust1)
scale_batter <- scale(batterClust1)
scale_all <- scale(allclust1)
nb <- as.matrix(batterClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
nb1 <- as.matrix(pitcherClust) %>% NbClust(diss=NULL, distance = "euclidean", min.nc = 2, max.nc=15, method = "centroid", index = "silhouette", alphaBeale = 0.1)
fviz_nbclust(scale_batter, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Batters Using PAM")
fviz_nbclust(scale_pitcher, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15) + ggtitle("Optimal Number of Clusters for Pitchers Using PAM")
fviz_nbclust(allclust, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
fviz_nbclust(allclust1, FUNcluster = cluster::pam ,  method = "silhouette", diss = NULL, k.max=15)
batter <- read_csv("mlbBatter22-23.csv", show_col_types = FALSE)
pitcher <- read_csv("mlbPitcher22-23.csv", show_col_types = FALSE)
allplayers <- read_csv("allplayers.csv", show_col_types = FALSE)
batterClust <- batter  %>% select(- `last_name, first_name`, -player_id, -year)
colnames(batterClust) <- c("","","","","","","","","","")
batterClust
batterClust1 <- batter  %>% select(- `last_name, first_name`,-salary, -player_id, -year)
colnames(batterClust) <- c("","","","","","","","","","")
pitcherClust <- pitcher  %>% select(- `last_name, first_name`, -player_id, -year)
colnames(pitcherClust) <- c("","","","","","","","","","")
pitcherClust
pitcherClust1 <- pitcher  %>% select(- `last_name, first_name`, -salary,  -player_id, -year)
colnames(pitcherClust) <- c("","","","","","","","","","")
allclust <- allplayers  %>% select(- `last_name, first_name`, -player_id, -year)
colnames(allclust) <- c("","","","","","","","","","")
allclust
allclust1 <- allplayers  %>% select(- `last_name, first_name`, -salary,  -player_id, -year)
colnames(allclust1) <- c("","","","","","","","","","")
allclust1
pcabatter <- batter %>% select(-`last_name, first_name`,- player_id, -year, -salary)
pcapitcher <- pitcher %>% select(-`last_name, first_name`,- player_id, -year, -salary)
pcaall <- allplayers %>% select(-`last_name, first_name`,- player_id, -year, -salary)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Batters)")
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", "Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Pitchers)")
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
pcabatter_norm <- scale(pcabatter)
pcapitcher_norm <- scale(pcapitcher)
pcaall_norm <- scale(pcaall)
pcabatter_corr <- cor(pcabatter_norm)
pcabatterpca <- princomp(pcabatter_corr)
pcapitcher_corr <- cor(pcapitcher_norm)
pcapitcherpca <- princomp(pcapitcher_corr)
pcaall_corr <- cor(pcaall_norm)
pcaallpca <- princomp(pcaall_corr)
fviz_pca_var(pcabatterpca, col.var = "cos2",  gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcabatterpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("Single", "Batting Avg","XLSO", "XBA", "XSLG",  "Home Run", "Hit", "On Base + SLG", "OBP", "SLG%", "Exit Velocity Avg", "XOBP", "Strikeout", "Launch Angle Avg", "Walk","Double", "AB", "Triple", "Player Age")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Batters)")
fviz_pca_var(pcapitcherpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcapitcherpca, choice = "var", axes = 1:2) + scale_x_discrete(label = c("XWOBA", "Strikeout", "WOBA", "Batting Avg", "XBA", "On Base + SLG", "P/IP", "XLSG", "OBP", "XOBP", "K %", "SLG %", "AB", "PA", "XLSO", "Single", "Hit", "P/Game", "BB %", "Double", "Barrel Batted Rate", "Exit Velocity Avg", "Launch Angle Avg", "Sweet Spot %", "Home Run", "Triple", "Player Age", "Walk")) + ggtitle("Cos2 Of Variables Assigned to Dimension 1 and 2 (Pitchers)")
fviz_pca_var(pcaallpca, col.var = "cos2", gradient.cols = c("black", "red", "blue"), repel = TRUE)
fviz_cos2(pcaallpca, choice = "var", axes = 1:2)
plot(pcapitcherpca)
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
fviz_cluster(hclust_avg_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
dist_pitcher <- dist(scale_pitcher, method = "euclidean")
hclust_avg_pitcher <- hclust(dist_pitcher, method = "ward.D")
plot(hclust_avg_pitcher)
cut_avg_pitcher <- cutree(hclust_avg_pitcher, h=2)
fviz_cluster(cut_avg_pitcher, scale_pitcher,
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw())
